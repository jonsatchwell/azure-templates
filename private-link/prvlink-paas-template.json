{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "resourcePrefix": {
            "type": "string",
            "minLength": 3,
            "maxLength": 10,
            "metadata": {
                "description": "The prefix to use for resources within the resource group"
            }
        },
        "privateEndpointCode": {
            "type": "string"
        },
        "vnetName": {
            "type": "string"
        },
        "subnetName": {
            "type": "string"
        },
        "privateServices": {
            "type":"array"
            }
    },
    "variables":{
        "storageAccountName": "[utils.uniqueName(parameters('resourcePrefix'), 'stg')]",
        "acrName": "[utils.uniqueName(parameters('resourcePrefix'), 'acr')]"
    },
    "functions": [
        {
            "namespace": "utils",
            "members": {
                "apiVersion": {
                    "parameters": [
                        {
                            "name": "providerNamespace",
                            "type": "string"
                        },
                        {
                            "name": "resourceType",
                            "type": "string"
                        }
                    ],
                    "output": {
                        "type": "string",
                        "value": "[providers(parameters('providerNamespace'), parameters('resourceType')).apiVersions[0]]"
                    }
                },
                "uniqueName": {
                    "parameters": [
                        {
                            "name": "resourcePrefix",
                            "type": "string"
                        },
                        {
                            "name": "resourceSuffix",
                            "type": "string"
                        }
                    ],
                    "output": {
                        "type": "string",
                        "value": "[concat(parameters('resourcePrefix'), uniqueString(resourceGroup().id), parameters('resourceSuffix'))]"
                    }
                }
            }
        }
    ],
    "resources": [
        {
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2019-04-01",
            "name": "[variables('storageAccountName')]",
            "location": "[resourceGroup().Location]",
            "sku": {
                "name": "Standard_LRS",
                "tier": "Standard"
            },
            "kind": "StorageV2",
            "properties": {
                "networkAcls": {
                    "bypass": "AzureServices",
                    "virtualNetworkRules": [],
                    "ipRules": [],
                    "defaultAction": "Deny"
                },
                "supportsHttpsTrafficOnly": true,
                "encryption": {
                    "services": {
                        "file": {
                            "enabled": true
                        },
                        "blob": {
                            "enabled": true
                        }
                    },
                    "keySource": "Microsoft.Storage"
                },
                "accessTier": "Hot"
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices",
            "apiVersion": "2019-04-01",
            "name": "[concat(variables('storageAccountName'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
            ],
            "properties": {
                "cors": {
                    "corsRules": []
                },
                "deleteRetentionPolicy": {
                    "enabled": false
                }
            }
        },
        {
            "type": "Microsoft.ContainerRegistry/registries",
            "apiVersion": "[providers('Microsoft.ContainerRegistry', 'registries').apiVersions[0]]",
            "name": "[variables('acrName')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
            ],
            "tags": {},
            "sku": {
                "name": "Premium"
            },
            "properties": {
                "publicNetworkAccess": "Disabled"
            }
        },
        {
            "apiVersion": "[providers('Microsoft.Network', 'privateEndpoints').apiVersions[0]]",
            "name": "[concat(parameters('resourcePrefix'),'-', parameters('privateServices')[copyIndex('prvlinkcopy')].resourceCode,'-', parameters('privateEndpointCode') )]",
            "type": "Microsoft.Network/privateEndpoints",
            "location": "[resourceGroup().Location]",
            "dependsOn": [ "[variables('acrName')]" ],
            "copy": {
                "name": "prvlinkcopy",
                "count": "[length(parameters('privateServices'))]"
            },
            "properties": {
                "privateLinkServiceConnections": [
                    {
                        "name": "[concat(parameters('resourcePrefix'),parameters('privateServices')[copyIndex('prvlinkcopy')].resourceCode,parameters('privateEndpointCode'),'-conn')]",
                        "properties": {
                            "privateLinkServiceId": "[resourceId(parameters('privateServices')[copyIndex('prvlinkcopy')].resourceType, utils.uniqueName(parameters('resourcePrefix'), parameters('privateServices')[copyIndex('prvlinkcopy')].resourceCode) )]",
                            "groupIds": "[parameters('privateServices')[copyIndex('prvlinkcopy')].groupIds]"
                        }
                    }
                ],
                "manualPrivateLinkServiceConnections": [],
                "subnet": {
                    "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('vnetName'), parameters('subnetName') )]"
                }
            }
        },
        {
            "type": "Microsoft.Network/privateDnsZones",
            "apiVersion": "2018-09-01",
            "name": "[parameters('privateServices')[copyIndex('dnscopy')].privateDnsName]",
            "location": "global",
            "tags": {},
            "properties": {},
            "copy": {
                "name": "dnscopy",
                "count": "[length(parameters('privateServices'))]"
            },
            "resources": [
                {
                    "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
                    "apiVersion": "2018-09-01",
                    "name": "[concat(parameters('privateServices')[copyIndex('dnscopy')].privateDnsName, '/', parameters('vnetName') )]",
                    "location": "global",
                    "dependsOn": [
                        "[parameters('privateServices')[copyIndex('dnscopy')].privateDnsName]"
                    ],
                    "properties": {
                        "virtualNetwork": {
                            "id": "[resourceId('Microsoft.Network/virtualNetworks', parameters('vnetName'))]"
                        },
                        "registrationEnabled": false
                    }
                }
            ]
        }
    ],
    "outputs": {
        "dnsConfig": {
            "type": "array",
            "copy": {
                "count": "[length(parameters('privateServices'))]",
                "input": {
                    "privateDnsName": "[parameters('privateServices')[copyIndex()].privateDnsName]",
                    "resourceName": "[utils.uniqueName(parameters('resourcePrefix'), parameters('privateServices')[copyIndex()].resourceCode)]",
                    "ipAddress": "[reference(resourceId('Microsoft.Network/privateEndpoints', concat(parameters('resourcePrefix'),'-', parameters('privateServices')[copyIndex()].resourceCode,'-', parameters('privateEndpointCode') )),'2020-04-01').CustomDnsConfigs[0].IpAddresses[0]]"
                }
            }
        }
    }
}